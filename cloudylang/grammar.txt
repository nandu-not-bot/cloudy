+               : One or more
*               : Zero or more
?               : Optional
--------------------------------------------------------------

statements      : NEWLINE* statement (NEWLINE+ statement)* NEWLINE*

statement       : KEYWORD:return expr?
                : KEYWORD:continue
                : KEYWORD:break
                : expr

expr            : KEYWORD:var IDENTIFIER EQ expr
                : comp-expr ((KEYWORD:and|KEYWORD:or) comp-expr)*

comp-expr       : not comp-expr
                : arith-expr ((EE|LT|GT|LTE|GTE|NE) arith-expr)*
        
arith-expr      : term ((PLUS|MINUS) term)*

term            : factor ((MULT|DIV) factor)*

factor          : atom (POW factor)*
                : power

power           : call ((MULT|DIV) factor)*

call            : atom (LPAR (expr (COMMA expr)*)? RPAR)?

atom            : INT|FLOAT|IDENTIFIER|BOOL|STR
                : LPAR expr RPAR
                : list-expr
                : if-expr
                : for-expr
                : while-exp
                : func-def

list-expr       : LSQUARE (expr (COMMA expr)*)? RSQUARE

if-expr         : KEYWORD:if expr KEYWORD:then
                  (statement if-expr-b|if-expr-c?)
                | (NEWLINE statements KEYWORD:end|if-expr-b|if-expr-c) 

if-expr-b       : KEYWORD:elif expr KEYWORD:then
                  (statement if-expr-b|if-expr-c?)
                | (NEWLINE statements KEYWORD:end|if-expr-b|if-expr-c) 

if-expr-c       : KEYWORD:else
                  statements
                | (NEWLINE statements KEYWORD:enD)

for-expr        : KEYWORD:for INDENTIFIER EQ expr KEYWORD:to expr
                  (KEYWORD:skip expr)? KEYWORD:then 
                  expr
                | (NEWLINE statements KEYWORD:enD)

while-expr      : KEYWORD:while expr KEYWORD:then 
                 expr
                | (NEWLINE statements KEYWORD:enD)

func-def        : KEYWORD:func IDENTIFIER? 
                  LPAR (IDENTIFIER (COMMA IDENTIFIER)*)? RPAR
                  ARROW expr
                | (NEWLINE statements KEYWORD:enD)   